{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/exploration/components/cell/cell.component.html","webpack:///./src/app/components/exploration/components/cell/cell.component.ts","webpack:///./src/app/components/exploration/components/exploration-actions/exploration-actions.component.html","webpack:///./src/app/components/exploration/components/exploration-actions/exploration-actions.component.ts","webpack:///./src/app/components/exploration/components/gates/gates.component.html","webpack:///./src/app/components/exploration/components/gates/gates.component.ts","webpack:///./src/app/components/exploration/components/map/map.component.html","webpack:///./src/app/components/exploration/components/map/map.component.ts","webpack:///./src/app/components/exploration/exploration-routing.module.ts","webpack:///./src/app/components/exploration/exploration.module.ts","webpack:///./src/app/components/exploration/models/cell.ts","webpack:///./src/app/components/exploration/models/map.ts","webpack:///./src/app/components/exploration/services/exploration.service.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/player-settings/player-settings.component.html","webpack:///./src/app/components/player-settings/player-settings.component.ts","webpack:///./src/app/components/registration/registration.component.html","webpack:///./src/app/components/registration/registration.component.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/services/main-api.service.ts","webpack:///./src/app/services/player.service.ts","webpack:///./src/app/services/token.interceptor.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PlayerSettingsComponent } from './components/player-settings/player-settings.component';\nimport { AuthGuard } from './services/auth-guard.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n    { path: 'login', component: LoginComponent },\n    { path: 'registering', component: RegistrationComponent },\n    { path: 'home', component: HomeComponent },\n    { path: 'settings', component: PlayerSettingsComponent, canActivate: [AuthGuard] },\n    { path: 'exploration', loadChildren: () => import('./components/exploration/exploration.module').then(mod => mod.ExplorationModule) },\n    { path: '',\n        redirectTo: '/home',\n        pathMatch: 'full'\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"row bottom-border-wood\">\r\n    <div *ngIf=\"playerService.player\" class=\"player-card col\">\r\n        <div class=\"player-avatar\"></div>\r\n        <div class=\"player-detail\">\r\n            <span><b>{{ playerService.player.name }}</b></span>\r\n            <span>niveaux 1 (57%)</span>\r\n        </div>\r\n    </div>\r\n    <nav class=\"col\">\r\n        <input type=\"button\" class=\"button-wood\" routerLink=\"/home\" routerLinkActive=\"active\" value=\"Accueil\" />\r\n        <input type=\"button\" class=\"button-wood\" routerLink=\"/settings\" routerLinkActive=\"active\" value=\"Paramètres\">\r\n        <input type=\"button\" class=\"button-wood\" routerLink=\"/exploration/labo\" routerLinkActive=\"active\"\r\n            value=\"Exploration\">\r\n        <input type=\"button\" class=\"button-wood\" (click)=\"logOut()\" *ngIf=\"isLogged()\" value=\"Se déconnecter\">\r\n        <input type=\"button\" class=\"button-wood\" routerLink=\"/registering\" routerLinkActive=\"active\" *ngIf=\"!isLogged()\"\r\n            value=\"S'inscrire\">\r\n        <input type=\"button\" class=\"button-wood\" routerLink=\"/login\" routerLinkActive=\"active\" *ngIf=\"!isLogged()\"\r\n            value=\"Se connecter\">\r\n    </nav>\r\n</div>\r\n\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { PlayerService } from './services/player.service';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    ngOnInit(): void {\r\n        this.playerService.refreshPlayer();\r\n    }\r\n\r\n    constructor(private router: Router, private http: HttpClient, public playerService: PlayerService) { }\r\n\r\n    isLogged(): boolean {\r\n        return localStorage.getItem('jwt') != undefined;\r\n    }\r\n\r\n    logOut() {\r\n        localStorage.removeItem(\"jwt\");\r\n        this.router.navigate([\"/home\"]);\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PlayerSettingsComponent } from './components/player-settings/player-settings.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { JwtHelperService, JwtModule } from '@auth0/angular-jwt';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { RegistrationComponent } from './components/registration/registration.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ExplorationModule } from './components/exploration/exploration.module';\r\nimport { TokenInterceptor } from './services/token.interceptor';\r\nimport { LoginClient, ExplorationClient, PlayerClient } from './services/main-api.service';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        PlayerSettingsComponent,\r\n        LoginComponent,\r\n        RegistrationComponent,\r\n        HomeComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        JwtModule.forRoot({\r\n            config: {\r\n                tokenGetter: tokenGetter,\r\n                whitelistedDomains: ['example.com'],\r\n                blacklistedRoutes: ['example.com/examplebadroute/']\r\n            }\r\n        }),\r\n        BsDropdownModule.forRoot(),\r\n        TooltipModule.forRoot(),\r\n        ModalModule.forRoot(),\r\n        ExplorationModule\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: TokenInterceptor,\r\n            multi: true\r\n        },\r\n        LoginClient,\r\n        ExplorationClient,\r\n        PlayerClient\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\nexport function tokenGetter() {\r\n    return localStorage.getItem('access_token');\r\n}\r\n","<div [class]=\"getClass()\"><span *ngIf=\"isCenter()\">ici</span></div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Cell } from '../../models/cell';\r\nimport { ExplorationService } from '../../services/exploration.service';\r\n\r\n@Component({\r\n    selector: 'app-cell',\r\n    templateUrl: './cell.component.html',\r\n    styleUrls: ['./cell.component.css']\r\n})\r\nexport class CellComponent implements OnInit {\r\n\r\n    @Input()\r\n    cell: Cell;\r\n\r\n    constructor(protected explorationService: ExplorationService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    getClass(): string {\r\n        let result = \"cell \";\r\n        if(!this.cell) {\r\n            result += \"type-none\";\r\n        }\r\n        else {\r\n            result += \"type-\" + this.cell.type + \" \";\r\n            if(this.isCenter()) {\r\n                result += \"center-cell \";\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    isCenter(): boolean {\r\n        if(!this.cell) {\r\n            return false;\r\n        }\r\n        return this.explorationService.explorationData.x === this.cell.x && this.explorationService.explorationData.y === this.cell.y;\r\n    }\r\n}\r\n","<button class=\"button-wood\" (click)=\"leaveMap()\">Rentrer en ville</button>","import { Component, OnInit } from '@angular/core';\r\nimport { ExplorationService } from '../../services/exploration.service';\r\n\r\n@Component({\r\n  selector: 'app-exploration-actions',\r\n  templateUrl: './exploration-actions.component.html',\r\n  styleUrls: ['./exploration-actions.component.css']\r\n})\r\nexport class ExplorationActionsComponent implements OnInit {\r\n\r\n  constructor(protected explorationService: ExplorationService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  leaveMap(): void {\r\n    this.explorationService.leaveMap();\r\n  }\r\n}\r\n","<div *ngIf=\"isInTown()\">\r\n    <h1>Vous êtes aux portes de la ville.</h1>\r\n    <p>Vous entrevoyez les possibilitées infinies que vous offrent le monde.</p>\r\n    <p>Cependant, les dangers rodent. De nombreuses épreuves vous attendent, préparez vous !</p>\r\n    <p>Endurance : {{ explorationService.explorationData.stamina }} / 1000</p>\r\n    <button class=\"button-wood\" (click)=\"regenerateStamina()\">Reprendre son souffle !</button>\r\n    <button class=\"button-wood\" (click)=\"enterMap()\">Sortir de la ville</button>\r\n</div>\r\n<div class=\"row\" *ngIf=\"!isInTown()\">\r\n    <app-map class=\"app-map col\" [map]=\"explorationService.map\"></app-map>\r\n    <app-exploration-actions class=\"app-actions col\"></app-exploration-actions>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { PlayerService } from 'src/app/services/player.service';\r\nimport { Player } from 'src/app/models/player/player';\r\nimport { ExplorationService } from '../../services/exploration.service';\r\nimport { Router } from '@angular/router';\r\nimport { Map } from '../../models/map';\r\n\r\n@Component({\r\n    selector: 'app-gates',\r\n    templateUrl: './gates.component.html',\r\n    styleUrls: ['./gates.component.css']\r\n})\r\nexport class GatesComponent implements OnInit {\r\n\r\n    constructor(protected explorationService: ExplorationService, private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.explorationService.refreshData();\r\n        this.explorationService.refreshMap();\r\n    }\r\n\r\n    isInTown(): boolean {\r\n        return this.explorationService.explorationData &&\r\n            this.explorationService.explorationData.currentMapId == -1;\r\n    }\r\n\r\n    enterMap(): void {\r\n        this.explorationService.enterMap().subscribe(result => {\r\n            if (result) {\r\n                this.explorationService.refreshData();\r\n                this.explorationService.refreshMap();\r\n            }\r\n        })\r\n    }\r\n\r\n    regenerateStamina(): void {\r\n        this.explorationService.regenerateStamina();\r\n    }\r\n}\r\n","<div class=\"map-name\"> {{ map.name }} </div>\r\n<p>Endurance : {{ explorationService.explorationData.stamina }} / 1000</p>\r\n<div class=\"map\">\r\n    <div class=\"map-row\" *ngFor=\"let rowIndex of getRowsIndex()\">\r\n        <div class=\"map-cell\" *ngFor=\"let columnIndex of getRowsIndex()\">\r\n            <app-cell [cell]=\"getCellFromCoordinate(rowIndex, columnIndex)\"></app-cell>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"map-navigation\">\r\n    <div class=\"button-row\"><button class=\"button-wood\" (click)=\"goTo(1)\" [disabled]=\"cantGoTo(1)\">Aller au <b>Nord</b></button></div>\r\n    <div class=\"button-row\">\r\n        <button class=\"button-wood\" (click)=\"goTo(2)\" [disabled]=\"cantGoTo(2)\">Aller à l'<b>Ouest</b></button>\r\n        <button class=\"button-wood\" (click)=\"goTo(0)\" [disabled]=\"cantGoTo(0)\">Aller à l'<b>Est</b></button>\r\n    </div>\r\n    <div class=\"button-row\"><button class=\"button-wood\" (click)=\"goTo(3)\" [disabled]=\"cantGoTo(3)\">Aller au <b>Sud</b></button></div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Map } from '../../models/map';\r\nimport { Cell } from '../../models/cell';\r\nimport { ExplorationService } from '../../services/exploration.service';\r\n\r\n@Component({\r\n    selector: 'app-map',\r\n    templateUrl: './map.component.html',\r\n    styleUrls: ['./map.component.css']\r\n})\r\nexport class MapComponent implements OnInit {\r\n\r\n    @Input()\r\n    map: Map;\r\n\r\n    constructor(public explorationService: ExplorationService) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    getRowsIndex(): Array<number> {\r\n        let array = new Array(5);\r\n        array = [-2,-1,0,1,2];\r\n        return array;\r\n    }\r\n\r\n    getCellFromCoordinate(rowIndex: number, columnIndex: number): Cell {\r\n        let playerX = this.explorationService.explorationData.x;\r\n        let playerY = this.explorationService.explorationData.y;\r\n        return this.map.cells.find(c => c.y * -1 === rowIndex - playerY && c.x === columnIndex + playerX);\r\n    }\r\n\r\n    goTo(direction: number): void {\r\n        this.explorationService.goTo(direction);\r\n    }\r\n\r\n    cantGoTo(direction: number): boolean {\r\n        let destinationX = this.explorationService.explorationData.x;\r\n        let destinationY = this.explorationService.explorationData.y;\r\n        if(direction === 0) {\r\n            destinationX += 1;\r\n        } else if(direction === 1) {\r\n            destinationY += 1;\r\n        } else if(direction === 2) {\r\n            destinationX -= 1;\r\n        } else if(direction === 3) {\r\n            destinationY -= 1;\r\n        }\r\n        let destinationCell = this.map.cells.find(c => c.y === destinationY && c.x === destinationX);\r\n        return !destinationCell;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { GatesComponent } from './components/gates/gates.component';\r\nimport { AuthGuard } from 'src/app/services/auth-guard.service';\r\nimport { MapComponent } from './components/map/map.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'labo', component: GatesComponent, canActivate: [AuthGuard] },\r\n    { path: 'map', component: MapComponent, canActivate: [AuthGuard] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ExplorationRoutingModule { } \r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ExplorationRoutingModule } from './exploration-routing.module';\r\nimport { GatesComponent } from './components/gates/gates.component';\r\nimport { MapComponent } from './components/map/map.component';\r\nimport { CellComponent } from './components/cell/cell.component';\r\nimport { ExplorationActionsComponent } from './components/exploration-actions/exploration-actions.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n      GatesComponent,\r\n      MapComponent,\r\n      CellComponent,\r\n      ExplorationActionsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ExplorationRoutingModule\r\n  ]\r\n})\r\nexport class ExplorationModule { } \r\n","export class Cell {\r\n    x: number;\r\n    y: number;\r\n    type:String;\r\n}","import { Cell } from './cell';\r\nimport { Player } from 'src/app/models/player/player';\r\n\r\nexport class Map {\r\n    id: string;\r\n    cells: Array<Cell>;\r\n    name:String;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Player } from 'src/app/models/player/player';\r\nimport { PlayerService } from 'src/app/services/player.service';\r\nimport { ExplorationData } from '../models/exploration-data';\r\nimport { Observable } from 'rxjs';\r\nimport { Map } from '../models/map';\r\nimport { ExplorationClient } from 'src/app/services/main-api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExplorationService {\r\n\r\n    public explorationData: ExplorationData;\r\n    public map: Map;\r\n\r\n    constructor(private http: HttpClient, private explorationClient: ExplorationClient) { }\r\n\r\n    refreshData(): void {\r\n        this.http.get(\"http://localhost:5002/api/exploration/res\", {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        }).subscribe(response => {\r\n            this.explorationData = response as ExplorationData;\r\n        }, err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    refreshMap(): void {\r\n        this.http.get(\"http://localhost:5002/api/exploration/map\", {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        }).subscribe(response => {\r\n            this.map = response as Map;\r\n        }, err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    enterMap(): Observable<boolean> {\r\n        return this.http.post<boolean>(\"http://localhost:5002/api/exploration/enter\", {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        });\r\n    }\r\n\r\n    leaveMap(): void {\r\n        this.explorationClient.leaveMap().subscribe(result => this.refreshData());\r\n    }\r\n\r\n    regenerateStamina(): void {\r\n        this.explorationClient.regenerateStamina().subscribe(result => {\r\n            if(result) {\r\n                this.explorationData = result;\r\n            }\r\n        })\r\n    }\r\n\r\n    goTo(direction: number): void {\r\n        this.http.post(\"http://localhost:5002/api/exploration/goto/\" + direction, {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        }).subscribe(response => {\r\n            this.explorationData = response as ExplorationData;\r\n        }, err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n}\r\n","<div class=\"home-body\">\n    <h1>Bienvenue dans Epic Portals!</h1>\n\n    <p><span class=\"bold\">Epic portals</span> est un jeu d'exploration et de collecte de ressources, où des explorateurs s'aventurent dans de\n        lointaines contrées en voyageant au moyen de portails magiques</p>\n\n    <p>Explorez, récoltez, combatez, fabriquez pour atteindre les secrets de ce monde et la gloire ultime.</p>\n    <p><button class=\"btn btn-primary\" routerLink=\"/registering\" *ngIf=\"!isLogged()\">Commencer à jouer</button></p>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  isLogged(): boolean {\n    return localStorage.getItem('jwt') != undefined;\n}\n}\n","<h1 *ngIf=\"isFromRegistration\" class=\"txt-reg\">Merci de vous être inscrit. Veuillez vous connecter pour entrer dans le jeu !</h1>\n<form class=\"form-signin\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\n    <div class=\"container-fluid\">\n        <h2 class=\"form-signin-heading\">Se connecter</h2>\n        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">Invalid username or password.</div>\n        <br />\n        <label for=\"username\" class=\"sr-only\">Pseudo</label>\n        <input type=\"email\" id=\"username\" name=\"username\" ngModel class=\"form-control\" placeholder=\"Pseudo\" required\n            autofocus>\n        <br />\n        <label for=\"password\" class=\"sr-only\">Mot de passe</label>\n        <input type=\"password\" id=\"password\" name=\"password\" ngModel class=\"form-control\" placeholder=\"Mot de passe\"\n            required>\n        <br />\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Se connecter</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { LoginClient, Login } from 'src/app/services/main-api.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    isFromRegistration: boolean = false;\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    invalidLogin: boolean;\r\n\r\n    constructor(private loginClient: LoginClient, private router: Router, private route: ActivatedRoute) {\r\n        this.route.queryParams.subscribe(params => {\r\n            this.isFromRegistration = params[\"from\"] === \"registration\";\r\n        });\r\n     }\r\n\r\n    login(form: NgForm) {\r\n        let user: Login = new Login();\r\n        user.userName = form.form.get('username').value;\r\n        user.password = form.form.get('password').value;\r\n        this.loginClient.login(user).subscribe(response => {\r\n            let token = (<string>response);\r\n            localStorage.setItem(\"jwt\", token);\r\n            this.invalidLogin = false;\r\n            this.router.navigate([\"/home\"]);\r\n        }, err => {\r\n            this.invalidLogin = true;\r\n        });\r\n    }\r\n\r\n    isLogged(): boolean {\r\n        return localStorage.getItem(\"jwt\") != undefined;\r\n    }\r\n\r\n}\r\n","<p>\n  player-settings works!\n</p>\n{{ playerService.player | json }}","import { Component, OnInit } from '@angular/core';\r\nimport { PlayerService } from 'src/app/services/player.service';\r\n\r\n@Component({\r\n    selector: 'app-player-settings',\r\n    templateUrl: './player-settings.component.html',\r\n    styleUrls: ['./player-settings.component.css']\r\n})\r\nexport class PlayerSettingsComponent implements OnInit {\r\n\r\n    constructor(public playerService: PlayerService) { }\r\n\r\n    ngOnInit() {\r\n        this.playerService.refreshPlayer();\r\n    }\r\n\r\n}\r\n","<form class=\"form-registering\" #registerForm=\"ngForm\" (ngSubmit)=\"register(registerForm)\">\n    <div class=\"container-fluid\">\n        <h2 class=\"form-registering-heading\">S'inscrire</h2>\n        <div *ngIf=\"invalidForm\" class=\"alert alert-danger\">Invalid username, mail or password.</div>\n        <br />\n        <label for=\"mail\" class=\"sr-only\">Adresse mail</label>\n        <input type=\"email\" id=\"mail\" name=\"mail\" ngModel class=\"form-control\" placeholder=\"Adresse mail\" required\n            autofocus>\n        <br />\n        <label for=\"name\" class=\"sr-only\">Pseudo</label>\n        <input type=\"text\" id=\"name\" name=\"name\" ngModel class=\"form-control\" placeholder=\"Pseudo\" required\n            autofocus>\n        <br />\n        <label for=\"password\" class=\"sr-only\">Mot de passe</label>\n        <input type=\"password\" id=\"password\" name=\"password\" ngModel class=\"form-control\" placeholder=\"Mot de passe\"\n            required>\n        <br />\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">S'inscrire</button>\n    </div>\n</form>\n\n<div class=\"div-center\"><a routerLink=\"/login\">déja inscrit ?</a></div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { PlayerService } from 'src/app/services/player.service';\n\n@Component({\n    selector: 'app-registration',\n    templateUrl: './registration.component.html',\n    styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n    invalidForm: boolean;\n    result: string;\n\n    constructor(private playerService: PlayerService, private router: Router) { }\n\n    ngOnInit() {\n    }\n\n    register(form: NgForm) {\n        this.playerService.register(form).subscribe(response => {\n            console.log(response);\n            this.invalidForm = false;\n            let navigationExtras: NavigationExtras = {\n                queryParams: {\n                    \"from\": \"registration\"\n                }\n            };\n            this.router.navigate([\"/login\"], navigationExtras);\n        }, err => {\n            this.invalidForm = true;\n            console.log(err);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private jwtHelper: JwtHelperService, private router: Router) {\r\n  }\r\n  canActivate() {\r\n    var token = localStorage.getItem(\"jwt\");\r\n \r\n    if (token && !this.jwtHelper.isTokenExpired(token)){\r\n      return true;\r\n    }\r\n    this.router.navigate([\"login\"]);\r\n    return false;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoginService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getToken(): string {\r\n        return `Bearer ${localStorage.getItem('jwt')}`;\r\n    }\r\n\r\n    login(form: NgForm): Observable<Object> {\r\n        let credentials = JSON.stringify(form.value);\r\n        return this.http.post(\"http://localhost:5002/api/auth/login\", credentials, {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        });\r\n    }\r\n}","/* tslint:disable */\r\n/* eslint-disable */\r\n//----------------------\r\n// <auto-generated>\r\n//     Generated using the NSwag toolchain v13.2.0.0 (NJsonSchema v10.1.2.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)\r\n// </auto-generated>\r\n//----------------------\r\n// ReSharper disable InconsistentNaming\r\n\r\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\r\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\r\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\r\n\r\nexport const API_BASE_URL = new InjectionToken<string>('API_BASE_URL');\r\n\r\n@Injectable()\r\nexport class ExplorationClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:5002\";\r\n    }\r\n\r\n    getExplorationResources(): Observable<ExplorationData> {\r\n        let url_ = this.baseUrl + \"/api/Exploration/res\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetExplorationResources(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetExplorationResources(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<ExplorationData>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<ExplorationData>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGetExplorationResources(response: HttpResponseBase): Observable<ExplorationData> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = ExplorationData.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<ExplorationData>(<any>null);\r\n    }\r\n\r\n    getCurrentMap(): Observable<Map> {\r\n        let url_ = this.baseUrl + \"/api/Exploration/map\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetCurrentMap(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetCurrentMap(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<Map>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<Map>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGetCurrentMap(response: HttpResponseBase): Observable<Map> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = Map.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<Map>(<any>null);\r\n    }\r\n\r\n    enterDefaultMap(): Observable<boolean> {\r\n        let url_ = this.baseUrl + \"/api/Exploration/enter\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processEnterDefaultMap(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processEnterDefaultMap(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<boolean>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<boolean>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processEnterDefaultMap(response: HttpResponseBase): Observable<boolean> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<boolean>(<any>null);\r\n    }\r\n\r\n    leaveMap(): Observable<boolean> {\r\n        let url_ = this.baseUrl + \"/api/Exploration/leave\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processLeaveMap(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processLeaveMap(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<boolean>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<boolean>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processLeaveMap(response: HttpResponseBase): Observable<boolean> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<boolean>(<any>null);\r\n    }\r\n\r\n    regenerateStamina(): Observable<ExplorationData> {\r\n        let url_ = this.baseUrl + \"/api/Exploration/regenerate\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processRegenerateStamina(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processRegenerateStamina(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<ExplorationData>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<ExplorationData>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processRegenerateStamina(response: HttpResponseBase): Observable<ExplorationData> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = ExplorationData.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<ExplorationData>(<any>null);\r\n    }\r\n\r\n    goTo(dir: number): Observable<ExplorationData> {\r\n        let url_ = this.baseUrl + \"/api/Exploration/goto/{dir}\";\r\n        if (dir === undefined || dir === null)\r\n            throw new Error(\"The parameter 'dir' must be defined.\");\r\n        url_ = url_.replace(\"{dir}\", encodeURIComponent(\"\" + dir)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGoTo(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGoTo(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<ExplorationData>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<ExplorationData>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGoTo(response: HttpResponseBase): Observable<ExplorationData> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = ExplorationData.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<ExplorationData>(<any>null);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class LoginClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:5002\";\r\n    }\r\n\r\n    login(user: Login): Observable<string> {\r\n        let url_ = this.baseUrl + \"/api/auth/login\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(user);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processLogin(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processLogin(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<string>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<string>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processLogin(response: HttpResponseBase): Observable<string> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<string>(<any>null);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class PlayerClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : \"http://localhost:5002\";\r\n    }\r\n\r\n    get(): Observable<Player> {\r\n        let url_ = this.baseUrl + \"/api/Player\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGet(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGet(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<Player>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<Player>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGet(response: HttpResponseBase): Observable<Player> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = Player.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<Player>(<any>null);\r\n    }\r\n\r\n    post(value: string): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/Player\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(value);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processPost(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processPost(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processPost(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    getTest(): Observable<string> {\r\n        let url_ = this.baseUrl + \"/api/Player/test\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetTest(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetTest(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<string>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<string>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processGetTest(response: HttpResponseBase): Observable<string> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<string>(<any>null);\r\n    }\r\n\r\n    register(newPlayer: Player): Observable<string> {\r\n        let url_ = this.baseUrl + \"/api/Player/register\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(newPlayer);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processRegister(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processRegister(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<string>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<string>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processRegister(response: HttpResponseBase): Observable<string> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<string>(<any>null);\r\n    }\r\n\r\n    put(id: number, value: string): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/Player/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(value);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n            })\r\n        };\r\n\r\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processPut(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processPut(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processPut(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    delete(id: number): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/Player/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processDelete(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processDelete(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processDelete(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n}\r\n\r\nexport class ExplorationData implements IExplorationData {\r\n    id!: number;\r\n    player?: Player | undefined;\r\n    stamina!: number;\r\n    currentMapId!: number;\r\n    x!: number;\r\n    y!: number;\r\n\r\n    constructor(data?: IExplorationData) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.player = _data[\"player\"] ? Player.fromJS(_data[\"player\"]) : <any>undefined;\r\n            this.stamina = _data[\"stamina\"];\r\n            this.currentMapId = _data[\"currentMapId\"];\r\n            this.x = _data[\"x\"];\r\n            this.y = _data[\"y\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): ExplorationData {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new ExplorationData();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"player\"] = this.player ? this.player.toJSON() : <any>undefined;\r\n        data[\"stamina\"] = this.stamina;\r\n        data[\"currentMapId\"] = this.currentMapId;\r\n        data[\"x\"] = this.x;\r\n        data[\"y\"] = this.y;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IExplorationData {\r\n    id: number;\r\n    player?: Player | undefined;\r\n    stamina: number;\r\n    currentMapId: number;\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport class Player implements IPlayer {\r\n    id!: number;\r\n    mail?: string | undefined;\r\n    name?: string | undefined;\r\n    password?: string | undefined;\r\n\r\n    constructor(data?: IPlayer) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.mail = _data[\"mail\"];\r\n            this.name = _data[\"name\"];\r\n            this.password = _data[\"password\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): Player {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new Player();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"mail\"] = this.mail;\r\n        data[\"name\"] = this.name;\r\n        data[\"password\"] = this.password;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IPlayer {\r\n    id: number;\r\n    mail?: string | undefined;\r\n    name?: string | undefined;\r\n    password?: string | undefined;\r\n}\r\n\r\nexport class Map implements IMap {\r\n    name?: string | undefined;\r\n    cells?: Cell[] | undefined;\r\n\r\n    constructor(data?: IMap) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.name = _data[\"name\"];\r\n            if (Array.isArray(_data[\"cells\"])) {\r\n                this.cells = [] as any;\r\n                for (let item of _data[\"cells\"])\r\n                    this.cells!.push(Cell.fromJS(item));\r\n            }\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): Map {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new Map();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"name\"] = this.name;\r\n        if (Array.isArray(this.cells)) {\r\n            data[\"cells\"] = [];\r\n            for (let item of this.cells)\r\n                data[\"cells\"].push(item.toJSON());\r\n        }\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IMap {\r\n    name?: string | undefined;\r\n    cells?: Cell[] | undefined;\r\n}\r\n\r\nexport class Cell implements ICell {\r\n    id!: number;\r\n    x!: number;\r\n    y!: number;\r\n    dangerosity!: number;\r\n    abundance!: number;\r\n    type!: CellType;\r\n\r\n    constructor(data?: ICell) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.x = _data[\"x\"];\r\n            this.y = _data[\"y\"];\r\n            this.dangerosity = _data[\"dangerosity\"];\r\n            this.abundance = _data[\"abundance\"];\r\n            this.type = _data[\"type\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): Cell {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new Cell();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"x\"] = this.x;\r\n        data[\"y\"] = this.y;\r\n        data[\"dangerosity\"] = this.dangerosity;\r\n        data[\"abundance\"] = this.abundance;\r\n        data[\"type\"] = this.type;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface ICell {\r\n    id: number;\r\n    x: number;\r\n    y: number;\r\n    dangerosity: number;\r\n    abundance: number;\r\n    type: CellType;\r\n}\r\n\r\nexport enum CellType {\r\n    City = 0,\r\n    Plain = 1,\r\n    Forest = 2,\r\n    Mountain = 3,\r\n    Water = 4,\r\n}\r\n\r\nexport class Login implements ILogin {\r\n    userName?: string | undefined;\r\n    password?: string | undefined;\r\n\r\n    constructor(data?: ILogin) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.userName = _data[\"userName\"];\r\n            this.password = _data[\"password\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): Login {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new Login();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"userName\"] = this.userName;\r\n        data[\"password\"] = this.password;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface ILogin {\r\n    userName?: string | undefined;\r\n    password?: string | undefined;\r\n}\r\n\r\nexport class ApiException extends Error {\r\n    message: string;\r\n    status: number; \r\n    response: string; \r\n    headers: { [key: string]: any; };\r\n    result: any; \r\n\r\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\r\n        super();\r\n\r\n        this.message = message;\r\n        this.status = status;\r\n        this.response = response;\r\n        this.headers = headers;\r\n        this.result = result;\r\n    }\r\n\r\n    protected isApiException = true;\r\n\r\n    static isApiException(obj: any): obj is ApiException {\r\n        return obj.isApiException === true;\r\n    }\r\n}\r\n\r\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\r\n    if (result !== null && result !== undefined)\r\n        return _observableThrow(result);\r\n    else\r\n        return _observableThrow(new ApiException(message, status, response, headers, null));\r\n}\r\n\r\nfunction blobToText(blob: any): Observable<string> {\r\n    return new Observable<string>((observer: any) => {\r\n        if (!blob) {\r\n            observer.next(\"\");\r\n            observer.complete();\r\n        } else {\r\n            let reader = new FileReader(); \r\n            reader.onload = event => { \r\n                observer.next((<any>event.target).result);\r\n                observer.complete();\r\n            };\r\n            reader.readAsText(blob); \r\n        }\r\n    });\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { NgForm } from '@angular/forms';\nimport { Player } from '../models/player/player';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PlayerService {\n\n    public player: Player;\n\n    constructor(private http: HttpClient) { }\n\n    refreshPlayer(): void {\n        this.http.get(\"http://localhost:5002/api/player\", {\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\"\n            })\n        }).subscribe(response => {\n            this.player = response as Player;\n        }, err => {\n            console.log(err)\n        });\n    }\n\n    register(form: NgForm): Observable<Object> {\n        let newPlayer = JSON.stringify(form.value);\n        return this.http.post(\"http://localhost:5002/api/player/register\", newPlayer, {\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpEvent,\r\n    HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { LoginService } from './login.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n    constructor(public auth: LoginService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        request = request.clone({\r\n            setHeaders: {\r\n                Authorization: `${this.auth.getToken()}`\r\n            }\r\n        });\r\n        return next.handle(request);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}